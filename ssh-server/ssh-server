#!/bin/bash
# ssh-server : connect to server using key file
# please change the key_file value to your public key
# @author Mohammed AlShannaq @mshannaq
# License: MIT License
# Copyright (c) 2023 Mohammed AlShannaq

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in
#all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# Script version
VERSION="1.0"

# Default SSH port
DEFAULT_PORT=22

# Configuration file path
CONFIG_FILE="$HOME/.ssh/ssh-server.config"

# Display script version
echo "Connect to SSH terminal SSH (ssh-server version: $VERSION)"

# Display help message function
display_help() {
    echo ""
    echo "Usage: $0 <user@hostname> <port>"
    echo "Connect to a server SSH using SSH key file"
    echo ""
    echo "I am using SSH key file defined in $CONFIG_FILE file $SSH_KEY_FILE"
    echo "You can change the key file by editing the $CONFIG_FILE and modify SSH_KEY_FILE value."
    echo ""
    echo "Usage: ssh-server <user@hostname> [port]"
    echo "If port is not provided, default SSH port $DEFAULT_PORT will be used."
    echo "if user not provided, default SSH user root will be used".
    echo ""
    echo "Options:"
    echo "  -h, --help    Display this help message and exit"
    echo ""
    echo "Examples:"
    echo "ssh-server serverhostname <-- this will connect serverhostname as root on port $DEFAULT_PORT"
    echo "ssh-server sam@hostname 8888 <-- this will connact hostname as user sam on port 8888"
    echo ""
    echo "To know to to generate SSH key visit https://gist.github.com/mshannaq/9d17d5a94997318d967739ebc46f5a44"
}

# Check for help option
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    display_help
    exit 0
fi

# Check if configuration file exists
if [ ! -f "$CONFIG_FILE" ]; then
    echo "Configuration file not found: $CONFIG_FILE"
    echo "You have to create $CONFIG_FILE and define the SSH_KEY_FILE"
    exit 1
fi

# Check if configuration file has correct permissions
FILE_PERMISSIONS=$(ls -l "$CONFIG_FILE" | awk '{print $1}')
if [ "$FILE_PERMISSIONS" != "-rw-------" ]; then
    echo "Error: Configuration $CONFIG_FILE file has incorrect permissions. Please set the permissions to 600. using \`chmod 600 $CONFIG_FILE\` "
    exit 1
fi

# Check if configuration file contains the key definition
if ! grep -q '^SSH_KEY_FILE=' "$CONFIG_FILE"; then
    echo "Error: Configuration file $CONFIG_FILE does not define the SSH key file on variable SSH_KEY_FILE"
    exit 1
fi

# Load configuration
source "$CONFIG_FILE"

if [ -z "$1" ]; then
    display_help
    exit 1
fi

# Extracting username and hostname from the provided argument
hostname_with_user="$1"
port="$2"

if [ -z "$port" ]; then
    port=$DEFAULT_PORT # Default SSH port
fi

# Splitting the provided argument into username and hostname
IFS='@' read -ra HOSTNAME_PARTS <<<"$hostname_with_user"

if [ ${#HOSTNAME_PARTS[@]} -eq 2 ]; then
    username="${HOSTNAME_PARTS[0]}"
    hostname="${HOSTNAME_PARTS[1]}"
else
    # If hostname does not contain "@", use default username
    username="root"
    hostname="$hostname_with_user"
fi

# Attempt SSH connection using fixed key file and extracted parameters
ssh -i "$SSH_KEY_FILE" -p "$port" "$username"@"$hostname"
